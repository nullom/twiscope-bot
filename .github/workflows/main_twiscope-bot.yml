# .github/workflows/deploy.yml
name: Twiscope CI/CD & Scheduled Fetch

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/5 * * * *'       # Every 5 minutes
  workflow_dispatch:

jobs:
  deploy:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . \
            -x "venv/*" -x ".git/*" -x ".github/*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact
        run: unzip -o release.zip

      - name: Extract output.tar.gz if exists
        run: |
          if [ -f output.tar.gz ]; then
            tar -xzf output.tar.gz
          fi

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZUREAPPSERVICE_CLIENTID_27708D4AA30F4564BB35A009BFAE245B }}
          tenant-id:       ${{ secrets.AZUREAPPSERVICE_TENANTID_749FE599FBE54C1A82DEB67A8B735DD6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_3A112A3230B0437391007D2898FAD638 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name:   twiscope-bot
          slot-name:  Production
          package:    release.zip

  fetch_and_send:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Fetch & send news
        run: python main.py
